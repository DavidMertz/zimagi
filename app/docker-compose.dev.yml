version: '3.7'

x-mcmi: &mcmi
    image: mcmi/mcmi
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
        - MCMI_CA_KEY
        - MCMI_CA_CERT
        - MCMI_KEY
        - MCMI_CERT
    environment:
      MCMI_LOG_LEVEL: debug
      MCMI_API_HOST: lb
      MCMI_API_PORT: 5123
      MCMI_POSTGRES_HOST: data
      MCMI_POSTGRES_PORT: 5432
      MCMI_REDIS_HOST: tasks
      MCMI_REDIS_PORT: 6379
      MCMI_WORKER_CONCURRENCY: 2
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/share/mcmi:/usr/local/share/mcmi
      - /var/local/mcmi.server:/var/local/mcmi
      - /usr/local/lib/mcmi:/usr/local/lib/mcmi
    depends_on:
      - data
      - tasks

services:
  lb:
    image: eeacms/haproxy:1.8-1.5
    restart: always
    environment:
      FRONTEND_PORT: "5123"
      FRONTEND_MODE: tcp
      BACKENDS: api
      BACKENDS_PORT: "5123"
      BACKENDS_MODE: tcp
      BALANCE: roundrobin
      DNS_ENABLED: "true"
      LOG_LEVEL: debug
      INTER: 60s
    depends_on:
      - api
    ports:
      - "5123:5123"
      - "1936:1936"

  api:
    << : *mcmi
    entrypoint: mcmi-api

  scheduler:
    << : *mcmi
    entrypoint: mcmi-scheduler

  worker:
    << : *mcmi
    entrypoint: mcmi-worker

  data:
    image: postgres:12
    command: postgres -c 'max_connections=100'
    restart: always
    environment:
      POSTGRES_USER: ${MCMI_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MCMI_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MCMI_POSTGRES_DB}
    volumes:
      - app-data:/var/lib/postgresql
    ports:
      - "5432:5432"

  tasks:
    image: redis:5
    restart: always
    command: redis-server --requirepass ${MCMI_REDIS_PASSWORD}
    volumes:
      - app-tasks:/data
    ports:
      - "6379:6379"

volumes:
  app-data:
    external: false

  app-tasks:
    external: false