plugins:
    base:
        interface:
            provider_config:
                params:
                    type: char

    data:
        base: base
        interface:
            facade:
                return: "@systems.models.facade.Facade"
            initialize_instances:
            initialize_instance:
                params:
                    instance: "@systems.models.base.AppModel"
                    created: bool
            prepare_instance:
                params:
                    instance: "@systems.models.base.AppModel"
                    created: bool
            store_related:
                params:
                    instance: "@systems.models.base.AppModel"
                    created: bool
                    test: bool
            finalize_instance:
                params:
                    instance: "@systems.models.base.AppModel"

    meta:
        base: base
        interface:
            register_types:

    group:
        base: data

    user:
        base: data

    environment:
        base: data

    module:
        base: data
        interface:
            get_profile_class:
                returns: "@systems.command.profile.CommandProfile"
            get_profile:
                params:
                    profile_name: char
                    show_options: bool
                returns: "@systems.command.profile.CommandProfile"
            run_profile:
                params:
                    profile_name: char
                    config: dict
                    components: list
                    display_only: bool
                    plan: bool
                    ignore_missing: bool
            export_profile:
                params:
                    components: list
            destroy_profile:
                params:
                    profile_name: char
                    config: dict
                    components: list
                    display_only: bool
                    ignore_missing: bool
            import_tasks:
                params:
                    tasks_path: char
                returns: dict
            get_task:
                params:
                    task_name: char
                    show_options: bool
                returns: "@plugins.task.Task"
            exec_task:
                params:
                    task_name: char
                    params: dict

    config:
        base: data

    task:
        base: base
        interface:
            get_fields:
                returns: dict
            execute:
                params:
                    results: "@plugins.task.TaskResult"
                    params: dict
