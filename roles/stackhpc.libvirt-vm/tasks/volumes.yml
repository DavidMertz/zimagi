---
- name: Gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
  tags: vars

- name: Ensure remote images are downloaded
  get_url:
    url: "{{ item }}"
    dest: "{{ libvirt_vm_image_cache_path }}/{{ item | basename }}"
  with_items: "{{ volumes | selectattr('image', 'defined') | map(attribute='image') | list }}"
  when: "'http' in item"

- name: Ensure local images are copied
  copy:
    src: "{{ item }}"
    dest: "{{ libvirt_vm_image_cache_path }}/{{ item | basename }}"
  with_items: "{{ volumes | selectattr('image', 'defined') | map(attribute='image') | list }}"
  when: "'http' not in item"

- name: Ensure the VM volumes exist
  script: >
    virt_volume.sh
    {{ item.name }}
    {{ item.pool }}
    {{ item.capacity }}
    {{ item.format | default(libvirt_volume_default_format) }}
    {% if item.image is defined %}
    {{ libvirt_vm_image_cache_path }}/{{ item.image | basename }}
    {% endif %}
  with_items: "{{ volumes }}"
  environment: "{{ libvirt_vm_volume_creation_env }}"
  register: volume_result
  changed_when:
    - volume_result is success
    - (volume_result.stdout | from_json).changed | default(True)
  become: true
